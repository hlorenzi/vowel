{"version":3,"file":"audioWorklet.js","mappings":"MAoCA,MAAMA,EAAS,IAAIC,aAAa,MAGhC,MAAMC,UAAiCC,sBAEnCC,WAAAA,GAEIC,OACJ,CAGAC,OAAAA,CACIC,EACAC,EACAC,GAEA,MAAMC,EAAOH,EAAO,GAAG,GACvB,IAAK,IAAII,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAC7BX,EAAOW,GAAKD,EAAKC,GAOrB,OALAE,KAAKC,KAAKC,YAAY,CAClBf,SACAY,OAAQF,EAAKE,UAGV,CACX,EAGJI,kBAAkB,kBAAmBd,E","sources":["webpack://vowel-analysis/./src/audioWorklet.ts"],"sourcesContent":["interface AudioWorkletProcessor {\n    readonly port: MessagePort;\n}\n\ninterface AudioWorkletProcessorImpl extends AudioWorkletProcessor {\n    process(\n        inputs: Float32Array[][],\n        outputs: Float32Array[][],\n        parameters: Record<string, Float32Array>\n    ): boolean;\n}\n\ndeclare var AudioWorkletProcessor: {\n    prototype: AudioWorkletProcessor;\n    new (options?: AudioWorkletNodeOptions): AudioWorkletProcessor;\n};\n\ntype AudioParamDescriptor = {\n    name: string,\n    automationRate: AutomationRate,\n    minValue: number,\n    maxValue: number,\n    defaultValue: number\n}\n\ninterface AudioWorkletProcessorConstructor {\n    new (options?: AudioWorkletNodeOptions): AudioWorkletProcessorImpl;\n    parameterDescriptors?: AudioParamDescriptor[];\n}\n\ndeclare function registerProcessor(\n    name: string,\n    processorCtor: AudioWorkletProcessorConstructor,\n): void;\n\n\nconst buffer = new Float32Array(1024)\n\n\nclass WaveformCaptureProcessor extends AudioWorkletProcessor\n{\n    constructor()\n    {\n        super()\n    }\n\n\n    process(\n        inputs: Float32Array[][],\n        outputs: Float32Array[][],\n        parameters: Record<string, Float32Array>)\n    {\n        const data = inputs[0][0]\n        for (let i = 0; i < data.length; i++)\n            buffer[i] = data[i]\n\n        this.port.postMessage({\n            buffer,\n            length: data.length\n        })\n        \n        return true\n    }\n}\n\nregisterProcessor(\"waveformCapture\", WaveformCaptureProcessor)"],"names":["buffer","Float32Array","WaveformCaptureProcessor","AudioWorkletProcessor","constructor","super","process","inputs","outputs","parameters","data","i","length","this","port","postMessage","registerProcessor"],"sourceRoot":""}